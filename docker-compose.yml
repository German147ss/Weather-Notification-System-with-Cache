version: "3.8"

services:

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    environment:
      DB_USER: alfred
      DB_PASSWORD: 4lfr3d
      DB_NAME: labora
      DB_HOST: db
      DB_PORT: 5432
      GOPROXY: direct
      RABBITMQ_HOST: rabbitmqq3
      RABBITMQ_PORT: 5672
      WEATHER_API_BASE_URL: http://weather-service:8083
    ports:
      - "8085:8082"
    depends_on:
      - db
      - rabbitmqq3
    restart: always
    networks:
      - backend

  rabbitmqq3:
    image: rabbitmq:management
    container_name: rabbitmqq3
    ports:
      - "5676:5672"
      - "15673:15672"
    networks:
      - backend
  us3r-service:
    build:
      context: ./user-service
    container_name: us3r-service
    environment:
      DB_USER: alfred
      DB_PASSWORD: 4lfr3d
      DB_NAME: labora
      DB_HOST: db
      DB_PORT: 5432
      RABBITMQ_PORT: 5672
      RABBITMQ_HOST: rabbitmqq3
      GOPROXY: direct
    ports:
      - "8082:8081"
    depends_on:
      - db
      - rabbitmqq3

    restart: always
    networks:
      - backend

  db:
    image: postgres:12
    environment:
      POSTGRES_USER: alfred
      POSTGRES_PASSWORD: 4lfr3d
      POSTGRES_DB: labora
    restart: always  # Asegura que el contenedor se reinicie si falla
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend 
  
  # Redis Service
  redis:
    image: redis:alpine
    container_name: redis-service
    ports:
      - "6380:6379"
    networks:
      - backend

  # Weather Service
  weather-service:
    build:
      context: ./weather-service
    container_name: weather-new-service
    ports:
      - "8084:8083"
    environment:
      REDIS_PORT: 6379
      REDIS_HOST: redis
      APP_PORT: 8083
    depends_on:
      - redis
    networks:
      - backend
 
volumes:
  pgdata:

networks:
  backend:
    driver: bridge